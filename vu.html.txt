import React, { useEffect, useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Table } from "@/components/ui/table";
import { LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from "recharts";
import io from "socket.io-client";

const socket = io("ws://localhost:8080");

export default function VnxTradingPlatform() {
  const [orderBook, setOrderBook] = useState([]);
  const [price, setPrice] = useState(0);
  const [amount, setAmount] = useState(0);
  const [type, setType] = useState("buy");
  const [balance, setBalance] = useState(1000);
  const [tradeHistory, setTradeHistory] = useState([]);

  useEffect(() => {
    socket.on("orderBookUpdate", (data) => {
      setOrderBook(data.orders);
    });
    socket.on("tradeUpdate", (data) => {
      setTradeHistory((prev) => [...prev, data.trade]);
    });
  }, []);

  const placeOrder = async () => {
    await fetch("http://localhost:5000/order", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ userId: "test-user", type, price, amount, asset: "BTC" })
    });
  };

  return (
    <div className="p-6 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      <Card>
        <CardContent>
          <h2 className="text-xl font-semibold mb-2">Balance: ${balance}</h2>
          <h2 className="text-xl font-semibold mb-2">Place an Order</h2>
          <select value={type} onChange={(e) => setType(e.target.value)} className="mb-2 p-2">
            <option value="buy">Buy</option>
            <option value="sell">Sell</option>
          </select>
          <Input type="number" placeholder="Price" value={price} onChange={(e) => setPrice(e.target.value)} />
          <Input type="number" placeholder="Amount" value={amount} onChange={(e) => setAmount(e.target.value)} />
          <Button className="mt-2 w-full" onClick={placeOrder}>Submit Order</Button>
        </CardContent>
      </Card>
      <Card>
        <CardContent>
          <h2 className="text-xl font-semibold mb-2">Order Book</h2>
          <Table>
            <thead>
              <tr><th>Type</th><th>Price</th><th>Amount</th></tr>
            </thead>
            <tbody>
              {orderBook.map((order, index) => (
                <tr key={index}>
                  <td>{order.type}</td>
                  <td>{order.price}</td>
                  <td>{order.amount}</td>
                </tr>
              ))}
            </tbody>
          </Table>
        </CardContent>
      </Card>
      <Card>
        <CardContent>
          <h2 className="text-xl font-semibold mb-2">Trade History</h2>
          <ResponsiveContainer width="100%" height={200}>
            <LineChart data={tradeHistory}>
              <XAxis dataKey="timestamp" tickFormatter={(tick) => new Date(tick).toLocaleTimeString()} />
              <YAxis dataKey="price" />
              <Tooltip />
              <Line type="monotone" dataKey="price" stroke="#8884d8" />
            </LineChart>
          </ResponsiveContainer>
        </CardContent>
      </Card>
    </div>
  );
}
